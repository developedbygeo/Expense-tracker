{"version":3,"sources":["components/card/Card.js","components/expenseFilter/ExpenseFilter.js","components/expenseDate/ExpenseDate.js","components/expenseItems/ExpenseItem.js","components/expensesList/ExpensesList.js","components/chart/ChartBar.js","components/chart/Chart.js","components/expensesChart/ExpensesChart.js","components/expenses/Expenses.js","components/addExpense/AddExpenseForm.js","components/addExpense/AddExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","selected","onChange","e","onFilterChange","target","disabled","ExpenseDate","year","date","toLocaleString","month","day","ExpenseItem","title","amount","ExpensesList","expenses","length","map","item","id","ChartBar","barFill","maxValue","Math","round","style","height","label","Chart","maximumValue","dataPoints","dataPoint","reduce","partial","sum","point","ExpensesChart","updatedDataPoints","expense","getMonth","Expenses","useState","selectedFilter","setSelectedFilter","filteredExpenses","items","filter","getFullYear","parseInt","selection","AddExpenseForm","inputTitle","inputPrice","inputDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onExpenseSave","prevState","type","placeholder","required","min","max","onClick","onCancel","AddExpense","formState","setFormState","toggleHandler","providedData","valueOf","onAddExpense","existingItems","JSON","parse","localStorage","getItem","App","setExpenses","newExpense","currentItems","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0cdfb65.chunk.js","sourcesContent":["const Card = (props) => {\n  const classes = `card ${props.className}`;\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","const ExpenseFilter = (props) => {\n  const selectionChangeHandler = (e) => {\n    props.onFilterChange(e.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={selectionChangeHandler}>\n          <option value=\"2025\">2025</option>\n          <option value=\"2024\">2024</option>\n          <option value=\"2023\">2023</option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"default\" disabled>\n            Year\n          </option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseFilter;\n","const ExpenseDate = (props) => {\n  const year = props.date.toLocaleString('en-US', { year: 'numeric' });\n  const month = props.date.toLocaleString('en-US', { month: 'short' });\n  const day = props.date.toLocaleString('en-US', { day: 'numeric' });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date-month\">{month}</div>\n      <div className=\"expense-date-year\">{year}</div>\n      <div className=\"expense-date-day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import ExpenseDate from '../expenseDate/ExpenseDate';\nimport Card from '../card/Card';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\nexport default ExpenseItem;\n","import ExpenseItem from '../expenseItems/ExpenseItem';\n\nconst ExpensesList = (props) => {\n  if (props.expenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No data found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.expenses.map((item) => (\n        <ExpenseItem\n          key={item.id}\n          title={item.title}\n          date={item.date}\n          amount={item.amount}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","const ChartBar = (props) => {\n  let barFill = '0%';\n  if (props.maxValue > 0) {\n    barFill = `${Math.round((props.value / props.maxValue) * 100)}%`;\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div\n        className=\"chart-bar__inner\"\n        title={`Total amount spent: $${props.value}`}\n      >\n        <div className=\"chart-bar__fill\" style={{ height: barFill }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n  const maximumValue = props.dataPoints\n    .map((dataPoint) => dataPoint.value)\n    .reduce((partial, sum) => partial + sum, 0);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((point) => (\n        <ChartBar\n          key={point.label}\n          value={point.value}\n          maxValue={maximumValue}\n          label={point.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from '../chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const updatedDataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    updatedDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={updatedDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import Card from '../card/Card';\nimport ExpenseFilter from '../expenseFilter/ExpenseFilter';\nimport { useState } from 'react/cjs/react.development';\nimport ExpensesList from '../expensesList/ExpensesList';\nimport ExpensesChart from '../expensesChart/ExpensesChart';\n\nexport default function Expenses(props) {\n  const [selectedFilter, setSelectedFilter] = useState('default');\n  const filterChangeHandler = (selection) => {\n    setSelectedFilter(selection);\n  };\n\n  const filteredExpenses = props.items.filter(\n    (item) => item.date.getFullYear() === parseInt(selectedFilter)\n  );\n\n  return (\n    <div className=\"app-wrapper\">\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          selected={selectedFilter}\n          onFilterChange={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList expenses={filteredExpenses} />\n      </Card>\n    </div>\n  );\n}\n","import { useState } from 'react';\n\nconst AddExpenseForm = (props) => {\n  const [userInput, setUserInput] = useState({\n    inputTitle: '',\n    inputPrice: '',\n    inputDate: '',\n  });\n\n  const titleChangeHandler = (e) => {\n    setUserInput((prevState) => {\n      return { ...prevState, inputTitle: e.target.value };\n    });\n  };\n\n  const priceChangeHandler = (e) => {\n    if (e.target.value < 0) return;\n    setUserInput((prevState) => {\n      return { ...prevState, inputPrice: e.target.value };\n    });\n  };\n\n  const dateChangeHandler = (e) => {\n    setUserInput((prevState) => {\n      return { ...prevState, inputDate: e.target.value };\n    });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: userInput.inputTitle,\n      date: new Date(userInput.inputDate),\n      amount: +userInput.inputPrice,\n    };\n    props.onExpenseSave(expenseData);\n    setUserInput(() => {\n      return {\n        inputTitle: '',\n        inputPrice: '',\n        inputDate: '',\n      };\n    });\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"add-expense__ctrls\">\n        <div className=\"add-expense__ctrl\">\n          <label>Item</label>\n          <input\n            onChange={titleChangeHandler}\n            value={userInput.inputTitle}\n            type=\"text\"\n            placeholder=\"Item purchased\"\n            required\n          />\n        </div>\n        <div className=\"add-expense__ctrl\">\n          <label>Price</label>\n          <input\n            onChange={priceChangeHandler}\n            value={userInput.inputPrice}\n            type=\"number\"\n            placeholder=\"Amount paid\"\n            required\n          ></input>\n        </div>\n        <div className=\"add-expense__ctrl\">\n          <label>Date</label>\n          <input\n            onChange={dateChangeHandler}\n            value={userInput.inputDate}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2025-12-31\"\n            required\n          />\n        </div>\n      </div>\n      <div className=\"add-expense__actions\">\n        <button className=\"submit\" type=\"submit\">\n          Add New\n        </button>\n        <button onClick={props.onCancel} className=\"cancel\" type=\"button\">\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddExpenseForm;\n","import AddExpenseForm from './AddExpenseForm';\nimport { useState } from 'react';\n\nconst AddExpense = (props) => {\n  const [formState, setFormState] = useState(false);\n\n  const toggleHandler = () => {\n    const desiredState = formState === false ? true : false;\n    setFormState(desiredState);\n  };\n\n  const expenseSaveHandler = (providedData) => {\n    const expenseData = {\n      ...providedData,\n      id: new Date().valueOf(),\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"add-expense\">\n      {!formState && (\n        <div className=\"form-toggle\">\n          <button onClick={toggleHandler}>Add New Expense</button>\n        </div>\n      )}\n\n      {formState && (\n        <AddExpenseForm\n          onExpenseSave={expenseSaveHandler}\n          onCancel={toggleHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AddExpense;\n","import './App.scss';\nimport Expenses from './components/expenses/Expenses';\nimport AddExpense from './components/addExpense/AddExpense';\nimport { useState } from 'react';\n\nconst setToLocalStorage = (currentItems) => {\n  localStorage.setItem('expenses', JSON.stringify(currentItems));\n};\n\nconst existingItems = () => {\n  const items =\n    JSON.parse(localStorage.getItem('expenses')) === null\n      ? []\n      : JSON.parse(localStorage.getItem('expenses')).map((item) => ({\n          title: item.title,\n          amount: item.amount,\n          id: item.id,\n          date: new Date(item.date),\n        }));\n  return items;\n};\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(existingItems);\n\n  const addExpenseHandler = (newExpense) => {\n    setExpenses((prevState) => {\n      setToLocalStorage([newExpense, ...prevState]);\n      return [newExpense, ...prevState];\n    });\n  };\n  return (\n    <div className=\"App\">\n      <AddExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport './styles/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n  module.hot.accept('./App.js', () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n  });\n}\n"],"sourceRoot":""}